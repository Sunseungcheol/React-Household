{"version":3,"sources":["components/Template.js","components/HouseholdContext.js","components/HouseholdHead.js","Button.js","Dialog.js","components/HouseholdItem.js","components/HouseholdList.js","components/HouseholdCreate.js","App.js","serviceWorker.js","index.js"],"names":["TemplateBlock","styled","div","Template","children","initialHouseholds","id","category","text","amount","householdReducer","state","action","type","concat","household","console","log","map","filter","Error","HouseholdStateContext","createContext","HouseholdDispatchContext","HouseholdNextIdContext","HouseProvider","useReducer","dispatch","nextId","useRef","Provider","value","useHouseholdState","useContext","useHouseholdDispatch","HouseholdHeadBlock","HouseholdHead","amountTotal","reduce","preValue","currentValue","x","dateString","Date","toLocaleDateString","year","month","day","className","toString","replace","btnColor","css","theme","color","selected","palette","lighten","darken","btnSizes","large","height","fontSize","medium","small","sizeStyles","size","StyledBtn","button","Button","rest","defaultProps","DarkBkg","DialogBlock","ButtonGroup","Dialog","title","confirmText","cancelText","visible","onConfirm","onCancle","onClick","icons","HouseholdItemBlock","Text","Price","Category","props","Remove","Edit","boxStyle","Select","select","Input","input","categoryColor","HouseholdItem","useState","deleteDialog","setDeleteDialog","editDialog","setEditDialog","Number","inputs","setInputs","onChange","e","target","name","onRemove","preventDefault","placeholder","React","memo","HouseholdListBlock","CategorySelectBlock","changeTitle","HouseholdList","households","selectName","setSelectName","CircleBtn","dialog","HouseholdCreate","setDialog","useHouseholdNextId","current","GlobalStyle","createGlobalStyle","App","blue","pink","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.021dfa48.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TemplateBlock = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 512px;\r\n  height: 768px;\r\n  margin: 96px auto 32px;\r\n\r\n  background-color: #faeef9;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.04);\r\n`;\r\n\r\nfunction Template({ children }) {\r\n  return <TemplateBlock>{children}</TemplateBlock>;\r\n}\r\n\r\nexport default Template;\r\n","import React, { useReducer, createContext, useContext, useRef } from 'react';\r\n\r\n//초기상태\r\nconst initialHouseholds = [\r\n  {\r\n    id: 1,\r\n    category: 'meal',\r\n    text: '중국집',\r\n    amount: 7000,\r\n  },\r\n  {\r\n    id: 2,\r\n    category: 'bmw',\r\n    text: '버스',\r\n    amount: 10000,\r\n  },\r\n  {\r\n    id: 3,\r\n    category: 'hospital',\r\n    text: '병원감',\r\n    amount: 9000,\r\n  },\r\n];\r\n\r\n/* Create, modify(EDIT), remove */\r\nfunction householdReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CREATE':\r\n      return state.concat(action.household);\r\n    case 'EDIT':\r\n      console.log(initialHouseholds);\r\n      return state.map(household =>\r\n        household.id === action.household.id\r\n          ? {\r\n              ...household,\r\n              category: action.household.category,\r\n              text: action.household.text,\r\n              amount: action.household.amount,\r\n            }\r\n          : household\r\n      );\r\n    case 'REMOVE':\r\n      return state.filter(household => household.id !== action.id);\r\n    default:\r\n      throw new Error(`Unhandled action type : ${action.type}`);\r\n  }\r\n}\r\n\r\n//Context state, dispatch, nextId\r\nconst HouseholdStateContext = createContext();\r\nconst HouseholdDispatchContext = createContext();\r\nconst HouseholdNextIdContext = createContext();\r\n\r\nexport function HouseProvider({ children }) {\r\n  const [state, dispatch] = useReducer(householdReducer, initialHouseholds);\r\n  const nextId = useRef(4);\r\n  return (\r\n    <HouseholdStateContext.Provider value={state}>\r\n      <HouseholdDispatchContext.Provider value={dispatch}>\r\n        <HouseholdNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </HouseholdNextIdContext.Provider>\r\n      </HouseholdDispatchContext.Provider>\r\n    </HouseholdStateContext.Provider>\r\n  );\r\n}\r\n\r\n//커스텀 훅\r\nexport function useHouseholdState() {\r\n  const context = useContext(HouseholdDispatchContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find HouseholdStateContext');\r\n  }\r\n  return useContext(HouseholdStateContext);\r\n}\r\n\r\nexport function useHouseholdDispatch() {\r\n  const context = useContext(HouseholdDispatchContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find HouseholdDispatchContext');\r\n  }\r\n  return useContext(HouseholdDispatchContext);\r\n}\r\n\r\nexport function useHouseholdNextId() {\r\n  const context = useContext(HouseholdNextIdContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return useContext(HouseholdNextIdContext);\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHouseholdState } from './HouseholdContext';\r\n\r\nconst HouseholdHeadBlock = styled.div`\r\n  padding: 48px 32px 24px;\r\n  border-bottom: 1px solid #dedede;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 27px;\r\n    color: #35548e;\r\n  }\r\n  p {\r\n    font-size: 20px;\r\n    margin-top: 20px;\r\n  }\r\n  span {\r\n    font-size: 22px;\r\n    color: #f37b7b;\r\n  }\r\n  .total-expense {\r\n    margin-top: 20px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    color: #865487;\r\n  }\r\n`;\r\nfunction numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n}\r\n\r\nfunction HouseholdHead() {\r\n  const household = useHouseholdState();\r\n  const amountTotal = household.reduce((preValue, currentValue) => {\r\n    //return preValue.amount + currentValue.amount 이거 안됨 오류\r\n    return preValue + currentValue.amount;\r\n  }, 0);\r\n  console.log(amountTotal);\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString('ko-KR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  });\r\n  return (\r\n    <HouseholdHeadBlock>\r\n      <h1>오늘의 지출</h1>\r\n      <p>{dateString}</p>\r\n      <div className=\"total-expense\">\r\n        총 지출 : <span>{numberWithCommas(amountTotal)} </span>원\r\n      </div>\r\n    </HouseholdHeadBlock>\r\n  );\r\n}\r\n\r\nexport default HouseholdHead;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { darken, lighten } from 'polished';\r\n\r\nconst btnColor = css`\r\n  ${({ theme, color }) => {\r\n    const selected = theme.palette[color];\r\n    return css`\r\n      background: ${selected};\r\n      &:hover {\r\n        background: ${lighten(0.1, selected)};\r\n      }\r\n      &:active {\r\n        background: ${darken(0.1, selected)};\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nconst btnSizes = {\r\n  large: {\r\n    height: '3rem',\r\n    fontSize: '1.25rem',\r\n  },\r\n  medium: {\r\n    height: '2.25rem',\r\n    fontSize: '1rem',\r\n  },\r\n  small: {\r\n    height: '1.75rem',\r\n    fontSize: '0.875rem',\r\n  },\r\n};\r\n\r\nconst sizeStyles = css`\r\n  ${({ size }) => css`\r\n    height: ${btnSizes[size].height};\r\n    font-size: ${btnSizes[size].fontSize};\r\n  `}\r\n`;\r\n\r\nconst StyledBtn = styled.button`\r\n  /* 공통 스타일 */\r\n  display: inline-block;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n\r\n  /* 크기 */\r\n  ${sizeStyles}\r\n\r\n  /* 색상 */\r\n  ${btnColor}\r\n  /* 기타 */\r\n  //붙어있는 경우 마진 레프드 1\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nfunction Button({ children, color, size, ...rest }) {\r\n  return (\r\n    <StyledBtn color={color} size={size} {...rest}>\r\n      {children}\r\n    </StyledBtn>\r\n  );\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'blue',\r\n  size: 'medium',\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst DarkBkg = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst DialogBlock = styled.div`\r\n  width: 320px;\r\n  padding: 1.5rem;\r\n  background: white;\r\n  border-radius: 2px;\r\n\r\n  h3 {\r\n    margin: 0;\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  div {\r\n    margin-top: 10px;\r\n    font-size: 1.125rem;\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nfunction Dialog({\r\n  title,\r\n  children,\r\n  confirmText,\r\n  cancelText,\r\n  visible,\r\n  onConfirm,\r\n  onCancle,\r\n}) {\r\n  if (!visible) return null;\r\n  return (\r\n    <DarkBkg>\r\n      <DialogBlock>\r\n        <h3>{title}</h3>\r\n        <div>{children}</div>\r\n        <ButtonGroup>\r\n          <Button color=\"blue\" onClick={onCancle}>\r\n            {cancelText}\r\n          </Button>\r\n          <Button color=\"pink\" onClick={onConfirm}>\r\n            {confirmText}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </DialogBlock>\r\n    </DarkBkg>\r\n  );\r\n}\r\n\r\nDialog.defaultProps = {\r\n  cancelText: '취소',\r\n  confirmText: '확인',\r\n};\r\nexport default Dialog;\r\n","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { ImPencil } from 'react-icons/im';\r\nimport { useHouseholdDispatch } from './HouseholdContext';\r\nimport Dialog from '../Dialog';\r\n\r\nconst icons = css`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n  justify-content: center;\r\n  color: #727258;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n`;\r\n\r\nconst HouseholdItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n\r\n  &:hover {\r\n  }\r\n`;\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n`;\r\n\r\nconst Price = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #c96a6a;\r\n  span {\r\n    font-size: 17px;\r\n  }\r\n`;\r\n\r\nconst Category = styled.div`\r\n  font-size: 18px;\r\n  padding: 5px 10px;\r\n  margin-right: 10px;\r\n  background-color: ${props => props.category};\r\n  border-radius: 3px;\r\n  color: white;\r\n`;\r\n\r\nconst Remove = styled.div`\r\n  ${icons}\r\n`;\r\nconst Edit = styled.div`\r\n  ${icons}\r\n  font-size: 20px;\r\n`;\r\n\r\nconst boxStyle = css`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 7px 0;\r\n  border: 1px solid #6b616e;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n  border-radius: 3px;\r\n`;\r\nconst Select = styled.select`\r\n  ${boxStyle}\r\n`;\r\nconst Input = styled.input`\r\n  ${boxStyle}\r\n`;\r\n//카테고리별 색상\r\nconst categoryColor = category => {\r\n  switch (category) {\r\n    case 'meal': {\r\n      return '#1376be';\r\n    }\r\n    case 'bmw': {\r\n      return '#1a6e3b';\r\n    }\r\n    case 'hospital': {\r\n      return '#a84c45';\r\n    }\r\n    default:\r\n      return 'white';\r\n  }\r\n};\r\nfunction HouseholdItem({ id, title, category, text, amount }) {\r\n  //삭제버튼 다이얼로그\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const onDeletClick = () => {\r\n    setDeleteDialog(true);\r\n  };\r\n  const onDeletConfirm = () => {\r\n    onRemove();\r\n    setDeleteDialog(false);\r\n  };\r\n  const onDeletCancle = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  //수정버튼 다이얼로그\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const onEditClick = () => {\r\n    setEditDialog(true);\r\n  };\r\n  const onEditCancle = () => {\r\n    setEditDialog(false);\r\n  };\r\n  const [inputs, setInputs] = useState({\r\n    id: id,\r\n    category: category,\r\n    text: text,\r\n    amount: Number(amount),\r\n  });\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.target;\r\n    setInputs({ ...inputs, [name]: value });\r\n  };\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(inputs.category, inputs.text, inputs.amount);\r\n    dispatch({\r\n      type: 'EDIT',\r\n      household: {\r\n        id: id,\r\n        category: inputs.category,\r\n        text: inputs.text,\r\n        //잊지말고 넘버로 보낼것\r\n        amount: Number(inputs.amount),\r\n      },\r\n    });\r\n\r\n    setEditDialog(false);\r\n  };\r\n\r\n  const dispatch = useHouseholdDispatch();\r\n  const onRemove = () => {\r\n    dispatch({\r\n      type: 'REMOVE',\r\n      id,\r\n    });\r\n  };\r\n  const numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n  return (\r\n    <>\r\n      <HouseholdItemBlock>\r\n        <Category category={categoryColor(category)}>{title}</Category>\r\n        <Text>{text}</Text>\r\n        <Price>\r\n          {numberWithCommas(amount)} <span>원</span>\r\n        </Price>\r\n        <Edit>\r\n          <ImPencil onClick={onEditClick}></ImPencil>\r\n        </Edit>\r\n        <Remove>\r\n          <MdDelete onClick={onDeletClick}></MdDelete>\r\n        </Remove>\r\n      </HouseholdItemBlock>\r\n\r\n      <Dialog\r\n        title=\"정말로 삭제하시겠습니까?\"\r\n        confirmText=\"삭제\"\r\n        cancelText=\"취소\"\r\n        visible={deleteDialog}\r\n        onConfirm={onDeletConfirm}\r\n        onCancle={onDeletCancle}\r\n      >\r\n        정말로 삭제하시겠습니까\r\n      </Dialog>\r\n      <Dialog\r\n        title=\"수정하시겠습니까?\"\r\n        confirmText=\"수정\"\r\n        cancelText=\"취소\"\r\n        visible={editDialog}\r\n        onConfirm={onSubmit}\r\n        onCancle={onEditCancle}\r\n      >\r\n        <form>\r\n          <Select name=\"category\" onChange={onChange}>\r\n            <option value=\"meal\">식사</option>\r\n            <option value=\"bmw\">교통</option>\r\n            <option value=\"hospital\">병원</option>\r\n          </Select>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"text\"\r\n            placeholder=\"내용\"\r\n            onChange={onChange}\r\n          />\r\n          <Input\r\n            type=\"text\"\r\n            name=\"amount\"\r\n            placeholder=\"가격\"\r\n            onChange={onChange}\r\n          />\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(HouseholdItem);\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHouseholdState } from './HouseholdContext';\r\nimport HouseholdItem from './HouseholdItem';\r\nimport CategorySelect from './CategorySelect';\r\n\r\nconst HouseholdListBlock = styled.div`\r\n  flex: 1;\r\n  padding: 20px 32px 48px;\r\n  overflow-y: auto;\r\n  background-color: #f1e1e1d6;\r\n`;\r\n\r\nconst CategorySelectBlock = styled.div`\r\n  padding: 18px 32px;\r\n  border-bottom: 1px solid #dedede;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  p {\r\n    margin-right: 10px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n  select {\r\n  }\r\n`;\r\n\r\nconst changeTitle = category => {\r\n  switch (category) {\r\n    case 'meal':\r\n      return '식사';\r\n    case 'bmw':\r\n      return '교통';\r\n    case 'hospital':\r\n      return '병원';\r\n    default:\r\n      return '설정안됨';\r\n  }\r\n};\r\nfunction HouseholdList() {\r\n  const households = useHouseholdState();\r\n  const [selectName, setSelectName] = useState('all');\r\n  const selectRerender = e => {\r\n    e.preventDefault();\r\n    return setSelectName(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <CategorySelectBlock>\r\n        <p>카테고리</p>\r\n        <select name=\"Category\" id=\"Category\" onChange={selectRerender}>\r\n          <option value=\"all\">전체</option>\r\n          <option value=\"meal\">식사</option>\r\n          <option value=\"bmw\">교통</option>\r\n          <option value=\"hospital\">의료</option>\r\n        </select>\r\n      </CategorySelectBlock>\r\n      <HouseholdListBlock>\r\n        {households.map(household =>\r\n          selectName === 'all' ? (\r\n            <HouseholdItem\r\n              key={household.id}\r\n              id={household.id}\r\n              title={changeTitle(household.category)}\r\n              category={household.category}\r\n              text={household.text}\r\n              amount={household.amount}\r\n            ></HouseholdItem>\r\n          ) : household.category === selectName ? (\r\n            <HouseholdItem\r\n              key={household.id}\r\n              id={household.id}\r\n              title={changeTitle(household.category)}\r\n              category={household.category}\r\n              text={household.text}\r\n              amount={household.amount}\r\n            ></HouseholdItem>\r\n          ) : (\r\n            ''\r\n          )\r\n        )}\r\n      </HouseholdListBlock>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HouseholdList;\r\n","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport Dialog from '../Dialog';\r\nimport { useHouseholdDispatch, useHouseholdNextId } from './HouseholdContext';\r\n\r\nconst CircleBtn = styled.button`\r\n  display: flex;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0;\r\n  width: 80px;\r\n  height: 80px;\r\n  transform: translate(-50%, 50%);\r\n\r\n  font-size: 60px;\r\n  color: white;\r\n  border-radius: 40px;\r\n  border: none;\r\n  outline: none;\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  background-color: #38d9a9;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    background-color: #63e6be;\r\n  }\r\n  &:active {\r\n    background-color: #20c997;\r\n  }\r\n\r\n  transition: all 0.3s;\r\n  ${props =>\r\n    props.dialog &&\r\n    css`\r\n      background-color: #ff6b6b;\r\n      &:hover {\r\n        background-color: #ff8787;\r\n      }\r\n      &:active {\r\n        background-color: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `};\r\n`;\r\nconst boxStyle = css`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 7px 0;\r\n  border: 1px solid #6b616e;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n  border-radius: 3px;\r\n`;\r\nconst Select = styled.select`\r\n  ${boxStyle}\r\n`;\r\nconst Input = styled.input`\r\n  ${boxStyle}\r\n`;\r\n\r\nfunction HouseholdCreate() {\r\n  const [dialog, setDialog] = useState(false);\r\n  const dispatch = useHouseholdDispatch();\r\n  const nextId = useHouseholdNextId();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    id: 0,\r\n    category: 'meal',\r\n    text: '',\r\n    amount: 0,\r\n  });\r\n\r\n  const { category, text, amount } = inputs;\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.target;\r\n    setInputs({ ...inputs, [name]: value });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'CREATE',\r\n      household: {\r\n        id: nextId.current,\r\n        category: category,\r\n        text: text,\r\n        //잊지말고 넘버로 보낼것\r\n        amount: Number(amount),\r\n      },\r\n    });\r\n\r\n    setInputs({\r\n      category: 'meal',\r\n    });\r\n    setDialog(false);\r\n    nextId.current += 1;\r\n  };\r\n\r\n  const onToggle = () => {\r\n    setDialog(!dialog);\r\n  };\r\n  const onCancle = () => {\r\n    setDialog(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CircleBtn onClick={onToggle} dialog={dialog}>\r\n        <MdAdd></MdAdd>\r\n      </CircleBtn>\r\n      <Dialog\r\n        title={'입력 후 확인을 누르세요'}\r\n        visible={dialog}\r\n        onConfirm={onSubmit}\r\n        onCancle={onCancle}\r\n      >\r\n        <form>\r\n          <Select name=\"category\" onChange={onChange}>\r\n            <option value=\"meal\">식사</option>\r\n            <option value=\"bmw\">교통</option>\r\n            <option value=\"hospital\">의료</option>\r\n          </Select>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"text\"\r\n            placeholder=\"내용\"\r\n            onChange={onChange}\r\n          />\r\n          <Input\r\n            type=\"text\"\r\n            name=\"amount\"\r\n            placeholder=\"가격\"\r\n            onChange={onChange}\r\n          />\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HouseholdCreate;\r\n","import React from 'react';\r\nimport './reset.css';\r\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\r\nimport Template from './components/Template';\r\nimport HouseholdHead from './components/HouseholdHead';\r\nimport CategorySelect from './components/CategorySelect';\r\nimport HouseholdList from './components/HouseholdList';\r\nimport HouseholdCreate from './components/HouseholdCreate';\r\nimport { HouseProvider } from './components/HouseholdContext';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body{\r\n    background-color:#b7b7b7;\r\n      }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider\r\n      theme={{\r\n        palette: {\r\n          blue: '#228be6',\r\n          pink: '#f06595',\r\n        },\r\n      }}\r\n    >\r\n      <>\r\n        <HouseProvider>\r\n          <GlobalStyle></GlobalStyle>\r\n          <Template>\r\n            <HouseholdHead></HouseholdHead>\r\n            <HouseholdList></HouseholdList>\r\n            <HouseholdCreate></HouseholdCreate>\r\n          </Template>\r\n        </HouseProvider>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}